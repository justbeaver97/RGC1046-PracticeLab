
#출처: https://www.tensorflow.org/tutorials/keras/classification?hl=ko#top_of_page
#01. 학습데이터 입력하기: 10개의 범주로 구분된 70,000(7만)개 패션이미지를 학습시킵니다
# 0=티셔츠, 1=바지, 2=풀오버, 3=드레스, 4=코트, 5=샌들, 6=셔츠, 7=스니커, 8=가방, 9=앵클부츠

fashion_mnist = keras.datasets.fashion_mnist

(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

train_images.shape

len(train_labels)

train_labels

test_images.shape

len(test_labels)

#데이터전처리
#네트워크를 훈련하기 전에 데이터를 전처리해야 합니다. 
#훈련 세트에 있는 첫 번째 이미지를 보면 픽셀 값의 범위가 0~255 사이라는 것을 알 수 있습니다:

plt.figure()
plt.imshow(train_images[0])
plt.colorbar()
plt.grid(False)
plt.show()

train_images = train_images / 255.0

test_images = test_images / 255.0

plt.figure(figsize=(10,10))
for i in range(25):
    plt.subplot(5,5,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(train_images[i], cmap=plt.cm.binary)
    plt.xlabel(class_names[train_labels[i]])
plt.show()


#모델구성: 신경망 모델을 만들려면 모델의 층을 구성한 다음 모델을 컴파일합니다.

model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

#모델훈련: 신경망모델을 훈련합니다. 

model.fit(train_images, train_labels, epochs=5)

test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)

print('\n테스트 정확도:', test_acc)

# 테스트 정확도는 얼마입니까? (테스트 정확도: 0.8773000240325928, 87.7%)
